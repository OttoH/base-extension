(()=>{"use strict";new class{constructor(){this.setupExtensionListeners(),this.setupContextMenus()}setupExtensionListeners(){chrome.runtime.onInstalled.addListener(t=>{"install"===t.reason?this.handleFirstInstall():"update"===t.reason&&this.handleExtensionUpdate(t.previousVersion)}),chrome.runtime.onMessage.addListener((t,e,a)=>(this.handleMessage(t,e,a),!0)),chrome.tabs.onUpdated.addListener((t,e,a)=>{"complete"===e.status&&a.url&&this.handleTabComplete(t,a)})}setupContextMenus(){chrome.contextMenus.create({id:"soulvet-extract",title:"Extract pet content with SOULVET",contexts:["page","selection"]}),chrome.contextMenus.onClicked.addListener((t,e)=>{"soulvet-extract"===t.menuItemId&&e?.id&&this.extractContentFromTab(e.id)})}async handleMessage(t,e,a){try{switch(t.action){case"extractContent":e.tab?.id?a({success:!0,data:await this.extractContentFromTab(e.tab.id)}):a({success:!1,error:"No tab ID available"});break;case"contentChanged":this.handleContentChange(t.url,e.tab?.id),a({success:!0});break;case"getStoredData":a({success:!0,data:await this.getStoredData(t.tabId)});break;case"clearStoredData":await this.clearStoredData(t.tabId),a({success:!0});break;default:a({success:!1,error:"Unknown action"})}}catch(t){console.error("Background script error:",t),a({success:!1,error:t instanceof Error?t.message:"Unknown error"})}}async extractContentFromTab(t){try{const e=await chrome.scripting.executeScript({target:{tabId:t},func:()=>{const t=window.contentExtractor;return t&&"function"==typeof t.extractPageContent?t.extractPageContent():{url:window.location.href,title:document.title,headings:[],petRelatedContent:[],metadata:{},extractedAt:(new Date).toISOString()}}});if(e[0]?.result){const a=e[0].result;return await this.storeExtractedData(t,a),a}}catch(t){console.error("Failed to extract content:",t)}return null}async storeExtractedData(t,e){const a=`extracted_data_${t}`;await chrome.storage.local.set({[a]:e}),await chrome.storage.session.set({lastExtraction:e,lastExtractionTabId:t})}async getStoredData(t){const e=`extracted_data_${t}`;return(await chrome.storage.local.get([e]))[e]||null}async clearStoredData(t){const e=`extracted_data_${t}`;await chrome.storage.local.remove([e])}handleFirstInstall(){chrome.storage.sync.set({autoExtract:!1,petKeywords:["dog","cat","pet","animal","veterinary","vet"],minContentLength:30,maxResults:15}),chrome.tabs.create({url:chrome.runtime.getURL("welcome.html")})}handleExtensionUpdate(t){console.log(`SOULVET Extension updated from ${t} to ${chrome.runtime.getManifest().version}`),t&&this.needsMigration(t)&&this.migrateData(t)}needsMigration(t){return!1}async migrateData(t){console.log("Migrating data from version:",t)}handleTabComplete(t,e){e.url&&this.isPetRelatedUrl(e.url)&&chrome.storage.sync.get(["autoExtract"],e=>{e.autoExtract&&this.extractContentFromTab(t)})}isPetRelatedUrl(t){return["petmd.com","akc.org","aspca.org","petco.com","petsmart.com","chewy.com","vetstreet.com","petfinder.com","rover.com"].some(e=>t.includes(e))||["veterinary","animal","pet","dog","cat","puppy","kitten"].some(e=>t.toLowerCase().includes(e))}handleContentChange(t,e){e&&(clearTimeout(this[`contentChangeTimer_${e}`]),this[`contentChangeTimer_${e}`]=setTimeout(()=>{console.log("Content changed on tab:",e)},2e3))}}})();
//# sourceMappingURL=background.js.map